[General]
#scheduler-class = "inet::cRealTimeScheduler" #so that speed appears realistic
#debug-on-errors=true
sim-time-limit = 1800s
eventlog-file = ${resultdir}/${configname}-${runnumber}.elog
repeat = 10
#abstract-config = true (requires omnet 7)

[Config Network]
#abstract-config = true (requires omnet 7)
network = Network
*.numNode = ${numNode=30}
**.numSectors = ${numSectors=10}
*.hosts[*].commRange = 500m

[Config Area]
#abstract-config = true (requires omnet 7)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1e6 m
**.constraintAreaMaxY = 1e6 m
**.constraintAreaMaxZ = 0m

[Config Update]
#abstract-config = true (requires omnet 7)
**.updateInterval = 0.1s # test with 0s too, and let getCurrentPosition update the display string from a test module

[Config GaussMobility]
extends = Network, Area, Update

**.mobility.typename = "GaussMobility"

**.mobility.speedX = 10mps + uniform(-12mps, 12mps)
**.mobility.speedXStdDev = 5mps
**.mobility.speedY = 0mps + uniform(-12mps, 12mps)
**.mobility.speedYStdDev = 5mps

**.mobility.margin = 30m

[Config LinkMaintain]
extends = GaussMobility

#*.hosts[*].transmittingPower = 3 W # 100~300mW
#*.hosts[*].receivingPower = 2 W # 50~100mW
#*.hosts[*].listenningPower = 0.5 W # 20~50mW

**.isPred = ${isPred=true}

#**.linkStateThreshold = ${linkStateThreshold=1..5 step 1}
**.rangeMultipleMax = ${rangeMultipleMax=7,9}
#**.batteryStorage = 10mAh

[Config LinkMaintain_no_pred]
extends = GaussMobility
# Node Config
**.isPred = ${isPred=false}
**.sendInterval = ${sendInterval=1..5 step 1}s
