[General]
#scheduler-class = "inet::cRealTimeScheduler" #so that speed appears realistic
debug-on-errors=true
sim-time-limit = 1800s
repeat = 10
#abstract-config = true (requires omnet 7)

[Config Network]
#abstract-config = true (requires omnet 7)
network = Network
*.numNode = 20

[Config Area]
#abstract-config = true (requires omnet 7)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1e6 m
**.constraintAreaMaxY = 1e6 m
**.constraintAreaMaxZ = 0m

[Config Update]
#abstract-config = true (requires omnet 7)
**.updateInterval = 0.1s # test with 0s too, and let getCurrentPosition update the display string from a test module

[Config GaussMarkovMobility]
extends = Network, Area, Update

**.mobility.typename = "GaussMarkovMobility"
**.mobility.alpha = 0.2
**.mobility.speed = 20mps + uniform(-2mps, 2mps)
**.mobility.speedStdDev = 40mps
**.mobility.angle = 0deg
**.mobility.angleStdDev = 40deg
**.mobility.margin = 30m

#**.mobility.initialX = uniform(m, 1e3m)
#**.mobility.initialY = uniform(constraintAreaMaxX / 2 - 1e3, constraintAreaMaxY / 2 + 1e3)
#**.mobility.initialX = uniform(0, constraintAreaMaxX / 1e5)
#**.mobility.initialY = uniform(0, constraintAreaMaxY / 1e5)

[Config GaussMobility]
extends = Network, Area, Update

**.mobility.typename = "GaussMobility"

**.mobility.speedX = 10mps + uniform(-12mps, 12mps)
**.mobility.speedXStdDev = 5mps
**.mobility.speedY = 0mps + uniform(-12mps, 12mps)
**.mobility.speedYStdDev = 5mps

**.mobility.margin = 30m



[Config LinkMaintain]
extends = GaussMobility

# Node Config
*.hosts[*].commRange = 500m

#*.hosts[*].transmittingPower = 3 W # 100~300mW
#*.hosts[*].receivingPower = 2 W # 50~100mW
#*.hosts[*].listenningPower = 0.5 W # 20~50mW

**.sendInterval = 1s
**.numSectors = 6
**.linkStateThreshold = 1
#**.batteryStorage = 10mAh
