[General]
#scheduler-class = "inet::cRealTimeScheduler" #so that speed appears realistic
#debug-on-errors=true
sim-time-limit = 1800s
eventlog-file = ${resultdir}/${configname}-${runnumber}.elog
repeat = 20
#abstract-config = true (requires omnet 7)

[Config Network]
#abstract-config = true (requires omnet 7)
network = Network
*.numNode = 30

[Config Area]
#abstract-config = true (requires omnet 7)
**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1e6 m
**.constraintAreaMaxY = 1e6 m
**.constraintAreaMaxZ = 0m

[Config Update]
#abstract-config = true (requires omnet 7)
**.updateInterval = 0.1s # test with 0s too, and let getCurrentPosition update the display string from a test module

[Config GaussMobility]
extends = Network, Area, Update

**.mobility.typename = "GaussMobility"

**.mobility.speedX = 10mps + uniform(-12mps, 12mps)
**.mobility.speedXStdDev = 5mps
**.mobility.speedY = 0mps + uniform(-12mps, 12mps)
**.mobility.speedYStdDev = 5mps

**.mobility.margin = 30m



[Config LinkMaintain]
extends = GaussMobility

# Node Config
*.hosts[*].commRange = 500m

#*.hosts[*].transmittingPower = 3 W # 100~300mW
#*.hosts[*].receivingPower = 2 W # 50~100mW
#*.hosts[*].listenningPower = 0.5 W # 20~50mW

**.sendInterval = 1s
**.numSectors = ${numSectors=8,10,12}
**.linkStateThreshold = 1
**.rangeMultipleMax = ${rangeMultipleMax=1..9 step 1}
#**.batteryStorage = 10mAh
